name: Create PR

on:
  workflow_dispatch: 

env:
  PERSONAL_PLUGIN_REPO: lmcintyre/DalamudPlugins
  INTERNAL_NAME: DamageInfoPlugin
  GITHUB_TOKEN: ${{ secrets.PAT }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get release
        id: getrel
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
      - name: Checkout DalamudPlugins
        uses: actions/checkout@v2
        with:
          repository: ${{ env.PERSONAL_PLUGIN_REPO }}
          token: ${{ secrets.PAT }}
      - name: Sync fork and set branch
        run: |
          git remote add upstream https://github.com/goatcorp/DalamudPlugins
          git pull upstream master
          git push
          git checkout -b ${{ env.INTERNAL_NAME }}${{ steps.getrel.outputs.release }}
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: release.yml
          workflow_conclusion: success
          path: plugins/${{ env.INTERNAL_NAME }}
      # The above download action also inflates, but includes the artifact name as a directory...
      - name: Cleanup artifact
        run: |
          mv plugins/${{ env.INTERNAL_NAME }}/artifact/* plugins/${{ env.INTERNAL_NAME}}/
          rm -rf plugins/${{ env.INTERNAL_NAME }}/artifact
      - name: Commit
        uses: EndBug/add-and-commit@v7
        with:
          add: --all
          author_name: GitHub Action
          author_email: github-actions[bot]@users.noreply.github.com
          branch: ${{ env.INTERNAL_NAME }}
          message: ${{ env.INTERNAL_NAME }} -> ${{ steps.getrel.outputs.release }}
          pull_strategy: NO-PULL
      - name: Create PR
        # This seems to be the proper way to specify the base repository until gh adds an actual way to do it...
        run: |
          git config --local --add remote.upstream.gh-resolved base
          gh pr create --title "${{ env.INTERNAL_NAME }} ${{ steps.getrel.outputs.release }}" --body "nofranz"